{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","event","console","log","key","setState","removeEventListener","this","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAe,CACbC,WAAY,MAFhB,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAClCC,QAAQC,IAAIF,EAAMG,KAClB,EAAKC,SAAS,CAAEP,WAAYG,EAAMG,WARxC,kCAYE,WACEL,SAASO,oBAAoB,SAAS,SAACL,GACrCC,QAAQC,IAAIF,EAAMG,UAdxB,oBAkBE,WACE,IAAQN,EAAeS,KAAKV,MAApBC,WAER,OAAIA,EACK,+DAAgCA,EAAhC,OAGF,4DAzBX,GAAyBU,IAAMC,W,MCF/BC,IAASC,OACP,cAAC,EAAD,IACAZ,SAASa,eAAe,W","file":"static/js/main.cd40a1e3.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { Key } from 'react';\n\ntype State = {\n  pressedKey: Key | null;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    pressedKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      console.log(event.key);\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      console.log(event.key);\n    });\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n\n    if (pressedKey) {\n      return <p>{`The last pressed key is [${pressedKey}]`}</p>;\n    }\n\n    return <p>Nothing was pressed yet</p>;\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}